import React, { useState, useEffect } from 'react'
import firebase from "firebase/app";
import { Link, useHistory } from 'react-router-dom';
export default function MinaSidor({ me, myGroups, setMyGroups, setCurrentGroup }) {

  let history = useHistory();

  useEffect(() => {
    console.log("Kör useEffect (sätter grupplista)", me);
    setMyGroups([]);

    const db = firebase.database();
    const query = db.ref("groups")          // SELECT * FROM groups
      .orderByChild("admin/email")          // WHERE admin/email
      .equalTo(me.email)                    // = den inloggades email

    query.on("child_added", snap => {
      // snap.key = "-MZx8..."
      // snap.val() = elementets innehåll
      // snap.val().firstName = t.ex "Berit"

      setMyGroups(myGroups => [...myGroups, snap.val()]); // ska setMyGroups även köras när man skapar en ny grupp?
    })
  }, []) // körs vid varje rendering av MinaSidor (tror jag)

  function createScheduleForGroup(group) {
    setCurrentGroup(group);

    history.push("/createschedule");
  }

  return (
    <div className="page-content">
      <div className="loose-text-field">
        <h2>Mina sidor</h2>
      </div>

      <h5 className="tagg">Skjutsningar</h5>
      <div className="infobox">
        <p>Här får du upp alla dina kommande skjutsningar. För att skjutsningar ska visas behöver du gå med i en grupp och skapa ett körschema.</p>
      </div>

      {myGroups.length ?
        <>
          {myGroups.map(group =>
            /* För varje grupp printar vi det här elementet */
            <div key={group.toString()}>
              <h5 className="tagg">{/*GRUPPLOGGA*/ group.title}</h5>
              <div className="infobox">
                <p>
                  {me.firstName + ", " + group.members.map(m => m.firstName).join(", ")
                  /*+ (group.members.length > 1 ?
                  group.members.reduce((m1, m2) => m1.firstName + ", " + m2.firstName)
                  : group.members[0].firstName)*/}
                </p>
                {/* Vi behöver på något vis få med oss rätt grupp till CreateSchedule */}
                {/* <Link className="button-grupp" to='/createschedule'>SKAPA KÖRSCHEMA</Link> */}
                <div className="button-holder-center">
                  <button className="button-v2" onClick={() => createScheduleForGroup(group)}>Skapa körschema</button>
                </div>
              </div>
            </div>
          )}
          <div className="create-group">
            <svg width="45" height="30" viewBox="0 0 61 38" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M55.1973 1V9.37334" stroke="#363636" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" />
              <path d="M51 5.21338H59.3406" stroke="#363636" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" />
              <path fill-rule="evenodd" clip-rule="evenodd" d="M38.4444 10.4444C38.4444 15.4444 34.6667 19.4444 29.8333 19.8889C33.5712 20.1225 36.9088 21.6902 39.4042 24.1556C41.1147 22.1009 43.6065 20.77 46.4444 20.5926C43.2222 20.2963 40.7037 17.6296 40.7037 14.2963C40.7037 10.8148 43.5185 8 47 8C50.4815 8 53.2963 10.8148 53.2963 14.2963C53.2963 17.6296 50.7778 20.2963 47.5556 20.5926C52.8889 20.9259 57 25.3333 57 30.963V31.7037H43.5804C43.8549 32.8972 44 34.1493 44 35.4444V36.5556H14V35.4444C14 27 20.1667 20.3889 28.1667 19.8889C23.3333 19.4444 19.5556 15.4444 19.5556 10.4444C19.5556 5.22222 23.7778 1 29 1C34.2222 1 38.4444 5.22222 38.4444 10.4444ZM43.1639 30.2222H55.4815C55.1481 25.5185 51.6296 22.0741 47 22.0741C44.2664 22.0741 41.9202 23.2749 40.3883 25.2268C41.5948 26.6744 42.5426 28.3618 43.1639 30.2222ZM39.2153 27.2354C38.3135 25.2268 39.8279 26.3492 39.8279 28.1658L40.3883 29.2085L40.8246 30.2222C41.0415 31.0626 41.6577 33.423 41.7222 34.3333H16.2778C16.7778 27.2778 22.0556 22.1111 29 22.1111C32.6876 22.1111 36.9334 24.8124 39.2153 27.2354ZM29 3.22222C25 3.22222 21.7778 6.44444 21.7778 10.4444C21.7778 14.4444 25 17.6667 29 17.6667C33 17.6667 36.2222 14.4444 36.2222 10.4444C36.2222 6.44444 33 3.22222 29 3.22222ZM47 9.48148C44.3333 9.48148 42.1852 11.6296 42.1852 14.2963C42.1852 16.963 44.3333 19.1111 47 19.1111C49.6667 19.1111 51.8148 16.963 51.8148 14.2963C51.8148 11.6296 49.6667 9.48148 47 9.48148Z" fill="#363636" />
              <path fill-rule="evenodd" clip-rule="evenodd" d="M19.5556 10.4444C19.5556 15.4444 23.3333 19.4444 28.1667 19.8889C24.4288 20.1225 21.0912 21.6902 18.5958 24.1556C16.8853 22.1009 14.3935 20.77 11.5556 20.5926C14.7778 20.2963 17.2963 17.6296 17.2963 14.2963C17.2963 10.8148 14.4815 8 11 8C7.51852 8 4.7037 10.8148 4.7037 14.2963C4.7037 17.6296 7.22222 20.2963 10.4444 20.5926C5.11111 20.9259 1 25.3333 1 30.963V31.7037H14.4196C14.1451 32.8972 14 34.1493 14 35.4444V36.5556H44V35.4444C44 27 37.8333 20.3889 29.8333 19.8889C34.6667 19.4444 38.4444 15.4444 38.4444 10.4444C38.4444 5.22222 34.2222 1 29 1C23.7778 1 19.5556 5.22222 19.5556 10.4444ZM14.8361 30.2222H2.51852C2.85185 25.5185 6.37037 22.0741 11 22.0741C13.7336 22.0741 16.0798 23.2749 17.6117 25.2268C16.4052 26.6744 15.4574 28.3618 14.8361 30.2222ZM18.7847 27.2354C19.6865 25.2268 18.1721 26.3492 18.1721 28.1658L17.6117 29.2085L17.1754 30.2222C16.9585 31.0626 16.3423 33.423 16.2778 34.3333H41.7222C41.2222 27.2778 35.9444 22.1111 29 22.1111C25.3124 22.1111 21.0666 24.8124 18.7847 27.2354ZM29 3.22222C33 3.22222 36.2222 6.44444 36.2222 10.4444C36.2222 14.4444 33 17.6667 29 17.6667C25 17.6667 21.7778 14.4444 21.7778 10.4444C21.7778 6.44444 25 3.22222 29 3.22222ZM11 9.48148C13.6667 9.48148 15.8148 11.6296 15.8148 14.2963C15.8148 16.963 13.6667 19.1111 11 19.1111C8.33333 19.1111 6.18518 16.963 6.18518 14.2963C6.18518 11.6296 8.33333 9.48148 11 9.48148Z" fill="#363636" />
              <path d="M29.8333 19.8889C34.6667 19.4444 38.4444 15.4444 38.4444 10.4444C38.4444 5.22222 34.2222 1 29 1C23.7778 1 19.5556 5.22222 19.5556 10.4444C19.5556 15.4444 23.3333 19.4444 28.1667 19.8889M29.8333 19.8889C33.5712 20.1225 36.9088 21.6902 39.4042 24.1556C41.1147 22.1009 43.6065 20.77 46.4444 20.5926C43.2222 20.2963 40.7037 17.6296 40.7037 14.2963C40.7037 10.8148 43.5185 8 47 8C50.4815 8 53.2963 10.8148 53.2963 14.2963C53.2963 17.6296 50.7778 20.2963 47.5556 20.5926C52.8889 20.9259 57 25.3333 57 30.963V31.7037H43.5804C43.8549 32.8972 44 34.1493 44 35.4444M29.8333 19.8889C37.8333 20.3889 44 27 44 35.4444M44 35.4444V36.5556H14V35.4444M14 35.4444C14 27 20.1667 20.3889 28.1667 19.8889M14 35.4444C14 34.1493 14.1451 32.8972 14.4196 31.7037H1V30.963C1 25.3333 5.11111 20.9259 10.4444 20.5926C7.22222 20.2963 4.7037 17.6296 4.7037 14.2963C4.7037 10.8148 7.51852 8 11 8C14.4815 8 17.2963 10.8148 17.2963 14.2963C17.2963 17.6296 14.7778 20.2963 11.5556 20.5926C14.3935 20.77 16.8853 22.1009 18.5958 24.1556C21.0912 21.6902 24.4288 20.1225 28.1667 19.8889M39.2153 27.2354C39.8689 28.1392 40.411 29.1408 40.8246 30.2222M39.2153 27.2354C38.3135 25.2268 39.8279 26.3492 39.8279 28.1658L40.3883 29.2085L40.8246 30.2222M39.2153 27.2354C36.9334 24.8124 32.6876 22.1111 29 22.1111M40.8246 30.2222C41.0415 31.0626 41.6577 33.423 41.7222 34.3333M41.7222 34.3333H16.2778M41.7222 34.3333C41.2222 27.2778 35.9444 22.1111 29 22.1111M16.2778 34.3333C16.7778 27.2778 22.0556 22.1111 29 22.1111M16.2778 34.3333C16.3423 33.423 16.9585 31.0626 17.1754 30.2222M29 22.1111C25.3124 22.1111 21.0666 24.8124 18.7847 27.2354M18.7847 27.2354C18.1311 28.1392 17.589 29.1408 17.1754 30.2222M18.7847 27.2354C19.6865 25.2268 18.1721 26.3492 18.1721 28.1658L17.6117 29.2085L17.1754 30.2222M55.4815 30.2222H43.1639C42.5426 28.3618 41.5948 26.6744 40.3883 25.2268C41.9202 23.2749 44.2664 22.0741 47 22.0741C51.6296 22.0741 55.1481 25.5185 55.4815 30.2222ZM21.7778 10.4444C21.7778 6.44444 25 3.22222 29 3.22222C33 3.22222 36.2222 6.44444 36.2222 10.4444C36.2222 14.4444 33 17.6667 29 17.6667C25 17.6667 21.7778 14.4444 21.7778 10.4444ZM42.1852 14.2963C42.1852 11.6296 44.3333 9.48148 47 9.48148C49.6667 9.48148 51.8148 11.6296 51.8148 14.2963C51.8148 16.963 49.6667 19.1111 47 19.1111C44.3333 19.1111 42.1852 16.963 42.1852 14.2963ZM2.51852 30.2222H14.8361C15.4574 28.3618 16.4052 26.6744 17.6117 25.2268C16.0798 23.2749 13.7336 22.0741 11 22.0741C6.37037 22.0741 2.85185 25.5185 2.51852 30.2222ZM15.8148 14.2963C15.8148 11.6296 13.6667 9.48148 11 9.48148C8.33333 9.48148 6.18518 11.6296 6.18518 14.2963C6.18518 16.963 8.33333 19.1111 11 19.1111C13.6667 19.1111 15.8148 16.963 15.8148 14.2963Z" stroke="#363636" stroke-miterlimit="10" />
            </svg>

            <Link className="linkcolor" to='/creategroup'>SKAPA NY GRUPP</Link>
          </div>
        </>
        : <>
          <h5 className="tagg">Grupper</h5>
          <div className="infobox">
            <p>Du är inte med i någon grupp än. Skapa en ny grupp och ett nytt körschema.</p>

            <Link className="create-group" to='/creategroup'>SKAPA NY GRUPP</Link>
          </div>
        </>}

      <div className="loose-text-field">
        <h3>&nbsp;&nbsp;Så kommer du igång</h3>
        <ol className="how_to" start="1">
          <li className="info_text">Skapa en ny grupp</li>
          <li className="info_text">Lägg till medlemmar</li>
          <li className="info_text">Skapa ett körschema</li>
        </ol>
      </div>


    </div>
  )
}
